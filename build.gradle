plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'goa.systems'
version = '0.0.1'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
	/* The version to include in this project. */
	reactmajorversion = 16
}

repositories {
	mavenCentral()
}

dependencies {

	/* SpringBoot */
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	/* Gson */
	implementation 'com.google.code.gson:gson:2.8.6'
	
	/* Logging */
	implementation 'org.slf4j:slf4j-api:1.7.30'
	testRuntimeOnly 'ch.qos.logback:logback-core:1.2.3'
	testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
	useJUnitPlatform()
}

task downloadReact {
	group = 'React'
	description = 'Downloads react to the local workspace.'

	doLast {
		def f = new File(rootProject.projectDir.absolutePath + '/src/main/resources/static/react.production.min.js')
		if (!f.exists()) {
			new URL('https://unpkg.com/react@' + reactmajorversion + '/umd/react.production.min.js').withInputStream{ i -> f.withOutputStream{ it << i }}
		}

		f = new File(rootProject.projectDir.absolutePath + '/src/main/resources/static/react-dom.production.min.js')
		if (!f.exists()) {
			new URL('https://unpkg.com/react-dom@' + reactmajorversion + '/umd/react-dom.production.min.js').withInputStream{ i -> f.withOutputStream{ it << i }}
		}
	}
}
